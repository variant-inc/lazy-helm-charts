---
# Source: variant-api/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: schedule-adherence-api
  labels:
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
  annotations:
    "eks.amazonaws.com/role-arn": "arn:aws:iam::account:role/role"
---
# Source: variant-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: schedule-adherence-api
  labels:
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
---
# Source: variant-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule-adherence-api
  labels:
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: variant-api
      app.kubernetes.io/instance: schedule-adherence-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: variant-api
        app.kubernetes.io/instance: schedule-adherence-api
      annotations:
        annotation1: annotation1
        annotation2: annotation2
    spec:
      serviceAccountName: schedule-adherence-api
      automountServiceAccountToken: true
      ### Behold! Long explanation for why securityContext is set here:
      #
      # When the "eks.amazonaws.com/role-arn" annotation is applied to the ServiceAccount used by this Deployment, 
      # some new volume is mounted which contains the AWS secrets for authentication. By default, the owner will 
      # be root, but the AWS SDK in our applications need access to this volume at runtime and our applications 
      # should _not_ run as root.
      #
      # fsGroup determines group ownership of volumes mounted in this dynamic manner.
      #
      # Assumptions:
      # 1) The application process runs on an Alpine based platform -- the "nobody" group is defined as ID 65534 in Alpine
      # 2) The application is running as a non-root user (u better be)
      # 3) The non-root user _does not_ belong to any groups (i.e, "nobody")
      #
      # Let's not run as root
      # Chown all the things that you own
      # Groups of nobody
      ###
      securityContext:
        fsGroup: 65534
      containers:
        - name: schedule-adherence-api
          image: ecr.amazonaws.com/schedule-adherence/schedule-adherence-api:abc123
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 1
              memory: 768Mi
            requests:
              cpu: 0.1
              memory: 384Mi
          env:
            - name: REVISION
              value: "abc123"
            - name: required_env_var
              value: required_env_var
            - name: true_conditional_1
              value: true_conditional_1
            - name: true_conditional_2
              value: true_conditional_2
---
# Source: variant-api/templates/hpa.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: schedule-adherence-api
  labels:
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: schedule-adherence-api
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---
# Source: variant-api/templates/service-entry.yaml
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: schedule-adherence-api-here-api
  labels: 
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  hosts:
    - "api.hereapi.com"
  exportTo:
    - "."
  location: MESH_EXTERNAL
  ports:
    - number: 443
      name: https
      protocol: HTTPS
  resolution: DNS
---
# Source: variant-api/templates/service-entry.yaml
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: schedule-adherence-api-database
  labels: 
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  addresses:
    - "1.1.1.1"
  exportTo:
    - "."
  location: MESH_EXTERNAL
  ports:
    - number: 5432
      name: tcp
      protocol: TCP
  resolution: DNS
---
# Source: variant-api/templates/service-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels: 
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
  name: schedule-adherence-api
spec:
  endpoints:
    - port: 80
      interval: 10s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - schedule-adherence
  selector: 
    matchLabels:
      app.kubernetes.io/name: variant-api
      app.kubernetes.io/instance: schedule-adherence-api
---
# Source: variant-api/templates/virtual-service-public.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: schedule-adherence-api
  labels: 
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  gateways:
    - default/default
  hosts:
    - api.dev-drivevariant.com
    - api.apps.dev-drivevariant.com
  http:
    - name: Private Path Redirects
      match:
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/health
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/docs
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/redoc
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/swagger
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/swaggerui
      redirect:
        authority: api.internal.apps.dev-drivevariant.com
        redirectCode: 307
    - name: Default Ingress
      match:
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/
      route:
        - destination:
            host: schedule-adherence-api
            port:
              number: 80
---
# Source: variant-api/templates/virtual-service.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: schedule-adherence-api-internal
  labels: 
    helm.sh/chart: variant-api-2.0.0
    app.kubernetes.io/name: variant-api
    app.kubernetes.io/instance: schedule-adherence-api
    app.kubernetes.io/managed-by: Helm
    revision: "abc123"
spec:
  gateways:
    - default/default
  hosts:
    - api.internal.dev-drivevariant.com
    - api.internal.apps.dev-drivevariant.com
  http:
    - name: Private Ingress
      match:
        - uri:
            prefix: /schedule-adherence/schedule-adherence-api/
      route:
        - destination:
            host: schedule-adherence-api
            port:
              number: 80
