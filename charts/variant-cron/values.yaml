# This file contains the defaults for all optional, overridable values

istio:
  egress: []
    # - name: some-external-api
    #   hosts:
    #     - "test.example.com"
    #   ports:
    #     - number: 443
    #       protocol: HTTPS
    # - name: some-external-database
    #   addresses:
    #     - "10.0.0.1"
    #   ports:
    #     - number: 5432
    #       protocol: TCP

imagePullSecrets: []

serviceAccount:
  roleArn:

podSecurityContext:
    fsGroup: 65534

securityContext:
  runAsNonRoot: true
  # -- (int) Optional. Used for integration testing. If provided, will override the `USER` command in your Dockerfile
  runAsUser:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false

cronJob:
  schedule:
  # Cron Style Schedule. For help check https://crontab.guru/
  image:
    pullPolicy: Always
    tag:
  resources:
    limits:
      cpu: 1
      memory: 768Mi
    requests:
      cpu: .1
      memory: 384Mi
  podAnnotations: {}
  # -- (list) full path to the job script to execute
  command:
  suspend: false

awsSecrets: []
  # - name: eng-secret-in-aws

secretVars: {}
  # key: value

configVars: {}
  # key: value

revision:
  # test-latest

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
#
nodeSelector: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Karpenter Provisioner Variables
node:
  create: false
  # -- (string) When `node.create` is `true`, must be a valid [EC2 Instance Type](https://aws.amazon.com/ec2/instance-types/)
  instanceType:
  ttlSecondsUntilExpired: 2592000
  ttlSecondsAfterEmpty: 1800

CLUSTER_NAME: variant-dev

## Tags to be applied to custom node provisioner
tags: