{{- define "chart.jobspec" }}
{{- $fullName := (include "chart.fullname" .) -}}
{{- $podLabels := (include "library.chart.podLabels" .) -}}
{{- $secrets := .Values.awsSecrets -}}
template:
  metadata:
    labels:
      {{- $podLabels | nindent 6 }}
    annotations:
      {{- include "library.chart.podAnnotations" . | nindent 6 }}
  spec:
    {{- with .Values.imagePullSecrets }}
    imagePullSecrets:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 6 }}
    {{- if len $secrets }}
    volumes:
      {{- range $secrets }}
      - name: {{ $fullName}}-{{ (.name | replace "_" "-") }}
        secret:
          secretName: {{ $fullName}}-{{ (.name | replace "_" "-") }}
      {{- end }}
    {{- end }}
    containers:
      - name: {{ $fullName }}
        image: {{ required "cronJob.image.tag is required" .Values.cronJob.image.tag }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        imagePullPolicy: {{ .Values.cronJob.image.pullPolicy }}
        command:
          - /bin/sh
          - -c
          - |
            until curl -fsI http://localhost:15021/healthz/ready; do echo \"Waiting for Sidecar...\"; sleep 3; done;
            echo \"Sidecar available. Running the command...\";
            {{ required "Command list must be provided" (join " " .Values.cronJob.command) }};
            x=$(echo $?); curl -fsI -X POST http://localhost:15020/quitquitquit && exit $x
        resources:
          limits:
            memory: {{ .Values.cronJob.resources.limits.memory }}
          requests:
            {{- toYaml (required "Resources is required" .Values.cronJob.resources.requests) | nindent 12 }}
        envFrom: {{ include "library.container.envFrom.tpl" . | nindent 10 }}
        {{ if len $secrets}}
        volumeMounts:
          {{- range $secrets }}
          - name: {{ $fullName}}-{{ (.name | replace "_" "-") }}
            readOnly: true
            mountPath: /app/secrets/{{ $fullName }}-{{ .name }}
            subPath: {{ $fullName }}-{{ .name }}
          {{- end }}
        {{- end}}
        env:
          - name: REVISION
            value: {{ required "revision is required" .Values.global.revision | quote }}
    restartPolicy: {{ .Values.restartPolicy }}
    serviceAccountName: {{ $fullName }}
    automountServiceAccountToken: true
    {{- if .Values.node.create }}
    nodeSelector:
      cloudops.io/namespace: {{ .Release.Namespace }}
      {{- if .Values.node.instanceType }}
      node.kubernetes.io/instance-type: {{ .Values.node.instanceType | quote }}
      {{- end }}
    {{- end }}
    tolerations:
    {{- if .Values.node.create }}
      - key: "namespace"
        value: {{ .Release.Namespace | quote }}
        operator: "Equal"
        effect: "NoSchedule"
    {{- end }}
    {{- range .Values.tolerations }}
      - key: {{ required "Key is required for tolerations" .key | quote }}
        operator: {{ .operator | default "Exists" | quote }}
        {{- if hasKey . "value"  }}
        value: {{ .value | quote }}
        {{- end }}
        effect: {{ .effect | default "NoSchedule" | quote }}
    {{- end }}
parallelism: 1
backoffLimit: 2
{{- end}}
