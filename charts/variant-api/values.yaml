# Defaults and documentation of chart values

istio:
  ingress:
    # -- (string) The base domain that will be used to construct URLs that point to your API.
    # This should almost always be the Octopus Variable named `DOMAIN` in the 
    # [AWS Access Keys](https://octopus.apps.ops-drivevariant.com/app#/Spaces-22/library/variables/)
    host:
    # -- When `false`, an internal URL will be created that will expose your application *via OpenVPN-only*.
    # When `true`, an additional publicly accesible URL will be created. 
    # This API should be secured behind some authentication method when set to `true`.
    public: false
    # -- When `true`, the path `/{target-namespace}/{helm-release-name}` will be preserved in requests to your application, else rewritten to `/` when `false`
    disableRewrite: false
    # -- Optional paths that will always redirect to internal/VPN endpoints
    redirects: []
      # - prefix: /hidden
  # -- A whitelist of external services that your API requires connection to.
  # The whitelist applies to the entire namespace in which this chart is installed. 
  # [These services](https://github.com/variant-inc/iaac-eks/blob/master/scripts/istio/service-entries.eps#L8) are globally whitelisted and do not require declaration.
  # See [egress](#egress-configuration) for more details.
  egress: []
    # - name: some-external-api
    #   hosts:
    #     - "test.example.com"
    #   ports:
    #     - number: 443
    #       protocol: HTTPS
    # - name: some-external-database
    #   addresses:
    #     - "10.0.0.1"
    #   ports:
    #     - number: 5432
    #       protocol: TCP

serviceMonitor:
  # -- Frequency at which Prometheus metrics will be collected from your service
  interval: 10s
  # -- Maximum wait duration for Prometheus metrics response from your service
  scrapeTimeout: 10s

service:
  # -- Port for internal services to access your API
  port: 80
  # -- Port on your container that exposes your HTTP API
  targetPort: 9000
  # -- Optional port which serves a health check endpoint at `/health`
  # Defaults to value of `service.targetPort` if not defined.
  healthCheckPort:
  # -- Optional port which serves prometheus metrics endpoint at `/metrics`
  # Defaults to value of `service.targetPort` if not defined.
  metricsPort:

serviceAccount:
  # -- (string) Optional ARN of the IAM role to be assumed by your application. 
  # If your API requires access to any AWS services, a role should be created in AWS IAM.
  # This role should have an inline policy that describes the permissions your API needs (connect to RDS, publish to an SNS topic, read from an SQS queue, etc.).
  roleArn:

autoscaling:
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage:

deployment:
  image:
    pullPolicy: IfNotPresent
    # -- (string) The full URL of the image to be deployed containing the HTTP API application
    tag:
  resources:
    limits:
      cpu: 1
      memory: 768Mi
    requests:
      cpu: .1
      memory: 384Mi
  args: []
  envVars: []
    # - name: required_env_var
    #   value: required_env_var
  conditionalEnvVars: []
    # - condition: false
    #   envVars:
    #     - name: false_conditional
    #       value: false_conditional
    # - condition: true
    #   envVars:
    #     - name: true_conditional_1
    #       value: true_conditional_1
    #     - name: true_conditional_2
    #       value: true_conditional_2
  podAnnotations: {}

# -- A list of secrets to configure to make available to your API.
# Create your secret in AWS Secrets Manager as plain text. 
# Full contents of this secret will be mounted as a file your application can read.
# See [secrets](#secrets) for more details.
secrets: []
  # - name: eng-secret-in-aws
  #   mountPath: /app/secrets
  #   fileName: aws-secret.json

# -- (string) Value for a [label](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) named `revision` 
# that will be applied to all objects created by a specific chart installation. 
# Strongly encouraged that this value corresponds to 1 of: Octopus package version, short-SHA of the commit, Octopus release version
revision:

authentication:
  enabled: false

authorization:
  rules:
    to: []
      # - operation:
      #     methods: "GET"
      #     paths: "/swagger"
