# Defaults and documentation of chart values

istio:
  ingress:
    # -- (string) The base domain that will be used to construct URLs that point to your API.
    # This should almost always be the Octopus Variable named `DOMAIN` in the 
    # [AWS Access Keys](https://octopus.apps.ops-drivevariant.com/app#/Spaces-22/library/variables/)
    host:
    # -- When `false`, an internal URL will be created that will expose your application *via OpenVPN-only*.
    # When `true`, an additional publicly accesible URL will be created. 
    # This API should be secured behind some authentication method when set to `true`.
    public: false
    # -- When `true`, the path `/{target-namespace}/{helm-release-name}` will be preserved in requests to your application, else rewritten to `/` when `false`
    disableRewrite: false
    # -- Optional paths that will always redirect to internal/VPN endpoints
    redirects: []
      # - prefix: /hidden
  # -- A whitelist of external services that your API requires connection to.
  # The whitelist applies to the entire namespace in which this chart is installed. 
  # [These services](https://github.com/variant-inc/iaac-eks/blob/master/scripts/istio/service-entries.eps#L8) are globally whitelisted and do not require declaration.
  # See [egress](#egress-configuration) for more details.
  egress: []
    # - name: some-external-api
    #   hosts:
    #     - "test.example.com"
    #   ports:
    #     - number: 443
    #       protocol: HTTPS
    # - name: some-external-database
    #   addresses:
    #     - "10.0.0.1"
    #   ports:
    #     - number: 5432
    #       protocol: TCP

serviceMonitor:
  # -- Frequency at which Prometheus metrics will be collected from your service
  interval: 10s
  # -- Maximum wait duration for Prometheus metrics response from your service
  scrapeTimeout: 10s

service:
  # -- Port for internal services to access your API
  port: 80
  # -- Port on your container that exposes your HTTP API
  targetPort: 9000
  # -- Optional port which serves a health check endpoint at `/health`
  # Defaults to value of `service.targetPort` if not defined.
  healthCheckPort:
  # -- Optional port which serves prometheus metrics endpoint at `/metrics`
  # Defaults to value of `service.targetPort` if not defined.
  metricsPort:

serviceAccount:
  # -- (string) Optional ARN of the IAM role to be assumed by your application. 
  # If your API requires access to any AWS services, a role should be created in AWS IAM.
  # This role should have an inline policy that describes the permissions your API needs (connect to RDS, publish to an SNS topic, read from an SQS queue, etc.).
  roleArn:

autoscaling:
  # -- (int) Minimum Number of Replicas.
  minReplicas: 1
  # -- (int) Maximum Number of Replicas.
  maxReplicas: 5
  # -- (int) CPU Utilization Percentage.
  targetCPUUtilizationPercentage: 80
  # -- (int) Memory Utilization Percentage.
  targetMemoryUtilizationPercentage:

deployment:
  image:
    # -- (string) IfNotPresent, Always, Never
    pullPolicy: IfNotPresent
    # -- (string) The full URL of the image to be deployed containing the HTTP API application
    tag:
  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    limits:
      # -- (int) Limits CPU
      cpu: 1
      # -- (string) Limits Memory
      memory: 768Mi
    requests:
      # -- (float) Requests CPU
      cpu: .1
      # -- (string) Request memory
      memory: 384Mi
  # -- (list) List of arguments that can be passed in the image.
  args: []

  # -- (list) List of Conditional Env Vars denoted by conditional (bool) and envVars (list)
  conditionalEnvVars: []
    # - condition: false
    #   envVars:
    #     - name: false_conditional
    #       value: false_conditional
    # - condition: true
    #   envVars:
    #     - name: true_conditional_1
    #       value: true_conditional_1
    #     - name: true_conditional_2
    #       value: true_conditional_2
  # -- (map) https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

# -- A list of secrets to configure to make available to your API.
# Create your secret in AWS Secrets Manager as plain text. 
# Full contents of this secret will be mounted as a file your application can read to /app/secrets/{name}
# See [secrets](#secrets) for more details.
awsSecrets: []
  # - name: eng-secret-in-aws

# -- (string) Value for a [label](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) named `revision` 
# that will be applied to all objects created by a specific chart installation. 
# Strongly encouraged that this value corresponds to 1 of: Octopus package version, short-SHA of the commit, Octopus release version
revision:

# -- (bool) selecting authentication: true when defining an api resource, Istio RBAC resources are created to require a valid JWT
# token before forwarding a request to your API.
authentication:
  enabled: false

# -- (list) List of operation objects with methods and paths key values allowing certain methods and paths to be whitelisted within the cluster
# GET /health and Get /metrics are set by default in authorization.yaml
authorization:
  rules:
    to: []
      # - operation:
      #     methods: "GET"
      #     paths: "/swagger"

# -- (map) User defined secret variables are implemented here.
secretVars: {}
  # foo: bar

# -- (map) User defined environment variables are implemented here.
configVars: {}
  # bar: foo

# -- (map) Node labels for pod assignment
#ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# -- (list) Tolerations for pod assignment
#ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- (map) Affinity for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

securityContext:
  # -- Runs as non root. Must use numeric User in container
  runAsNonRoot: true
  # -- (int) Runs as numeric user
  runAsUser:
  # -- Drop All capabilities
  capabilities:
    drop:
    - ALL
  # -- (bool) Setting it to false ensures that no child process of a container can gain more privileges than its parent
  allowPrivilegeEscalation: false
  # -- (bool) Requires that containers must run with a read-only root filesystem (i.e. no writable layer)
  readOnlyRootFilesystem: false

# -- See [Probe](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Probe) docs
readinessProbe:
#   httpGet:
#     path: /health
#     port: 5000

# -- See [Probe](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Probe) docs
livenessProbe:
  httpGet:
    path: /health
    port: 80
  initialDelaySeconds: 10
  periodSeconds: 10
#   httpGet:
#     path: /health
#     port: 5000

# -- Octopus tags
octopusTags:
  # -- Octopus project name
  project:
  # -- Octopus space name
  space:
  # -- Octopus environment name
  environment:
  # -- Octopus project group
  project_group:
  # -- Octopus release name
  release_channel:

# -- User tags
userTags:
  # -- Team
  team:
  # -- purpose of the project
  purpose:
  # -- owner of the project
  owner: