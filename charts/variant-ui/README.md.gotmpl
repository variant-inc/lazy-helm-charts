# Variant UI Helm Chart

{{ template "chart.deprecationWarning" . -}}

{{ template "chart.badgesSection" . -}}

{{ template "chart.description" . }}

## How do I access my UI?

- Via VPN at `https://my-ui.internal.apps.<DOMAIN>`
- If set to public it can be accessed at `https://my-ui.apps.<DOMAIN>`

## Before you start

### Prerequisites

1. Use a CloudOps Github CI workflow that publishes an image
   - [.NET](<https://github.com/variant-inc/actions-dotnet>)
   - [Node](<https://github.com/variant-inc/actions-nodejs>)
   - [Python](<https://github.com/variant-inc/actions-python>)
1. Host a health check endpoint via `GET /health` which returns a status code < 400 when healthy or >= 400 when unhealthy
1. Host a Prometheus metrics collection endpoint via `GET /metrics`
   - This chart configures a ServiceMonitor (see [Application Configuration](#application-configuration)) to collect metrics from your API
   - Middleware exists for most major API frameworks that provide a useful out-of-the box HTTP server metrics, and simple tools to push custom metrics for your product:
     - [.NET](<https://github.com/prometheus-net/prometheus-net>)
     - Node - [NestJS](<https://github.com/digikare/nestjs-prom), [Express](https://github.com/joao-fontenele/express-prometheus-middleware>)
     - Python - [Flask](<https://github.com/rycus86/prometheus_flask_exporter), [Django](https://github.com/korfuri/django-prometheus>)

### Assumptions

*See [Application Configuration](#application-configuration) to override these assumptions if necessary.*

1. Your API, health check endpoint, and metrics endpoint all run on the same server at port 9000
1. Your container executes without any required arguments (i.e can be executed as `docker run [image]`)
1. There is no required environment variable for your UI to function

***

#### Application Configuration

| Input | [Kubernetes Object Type](<https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/>) | Description | Default Value |
| - | - | - | - |
| service.port | Service, ServiceMonitor | Port for internal services to access your API | 80 |
| service.targetPort | Service, Deployment | Port on your container that exposes your HTTP API | 9000 |
| service.metricsPort | Service, ServiceMonitor, Deployment | Port which serves prometheus metrics endpoint at `/metrics` | service.targetPort |
| service.healthCheckPort | Service, ServiceMonitor, Deployment | - | service.targetPort |
| deployment.args | Deployment | List of arguments that can be passed in the image. | [] |
| deployment.envVars | Deployment | List variables defined in a Pod configuration that overrides any environment variables specified in the container image. | [] |
| deployment.conditionalEnvVars | Deployment | List of Conditional Env Vars denoted by conditional (bool) | [] |

#### Ingress Configuration

(*how resources will access your service*)

URL Formats

- Public: `api.{istio.ingress.host}/{target-namespace}/{helm-release-name}`
- Private (OpenVPN): `api.internal.{istio.ingress.host}/{target-namespace}/{helm-release-name}`

When using public ingess, the following URL prefixes are rerouted to the root URL and are essentially blocked. They must be accessed internally, or through VPN. You can add to this list in Values.istio.ingress.redirects.

- health
- swagger
- swaggerui

#### [Infrastructure Permissions](<https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs/Apps/Common/rolearn>)

#### [Egress Configuration](<https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs/Apps/Common/egress>)

(*how your service will access external resources*)

#### [Environment Variables](<https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs/Apps/Common/environment_variables>)

#### Special Considerations

##### Custom Hosts

When using custom hosts, ie

```yaml
istio:
  enabled: true
  ingress:
    # hosts:
      - url: "internal.apps.drive-variant.com" ##Included
      - url: "awesomeapp.drive-variant.com" ##Custom
```

The host must be setup as a SAN on the certificate of the cluster. Please create a [support request](http://cloudops.ops-drivevariant.com/support) to include your host name in our cluster's certificate.

## Kubernetes Object Reference

All possible objects created by this chart:

- [Deployment](<https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/>)
- [HorizontalPodAutoscaler](<https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v1/>)
- [ServiceEntry](<https://istio.io/latest/docs/reference/config/networking/service-entry/#ServiceEntry>)
- [ServiceMonitor](<https://docs.openshift.com/container-platform/4.8/rest_api/monitoring_apis/servicemonitor-monitoring-coreos-com-v1.html>)
- [Service](<https://kubernetes.io/docs/reference/kubernetes-api/service-resources/service-v1/>)
- [ServiceAccount](<https://kubernetes.io/docs/reference/kubernetes-api/authentication-resources/service-account-v1/>)
- [VirtualService](<https://istio.io/latest/docs/reference/config/networking/virtual-service/#VirtualService>)

{{ template "chart.valuesSection" . }}
