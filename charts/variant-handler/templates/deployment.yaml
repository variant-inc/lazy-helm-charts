{{- $fullName := (include "chart.fullname" .) -}}
{{- $labels := (include "library.chart.labels" .) -}}
{{- $selectorLabels := (include "library.chart.selectorLabels" .) -}}
{{- $podLabels := (include "library.chart.podLabels" .) -}}
{{- $secrets := .Values.awsSecrets -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- $labels | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- $selectorLabels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- $podLabels | nindent 8 }}
      annotations:
        {{- include "chart.podAnnotations" . | indent 8 }}
    spec:
      serviceAccountName: {{ $fullName }}
      automountServiceAccountToken: true
      {{- if len .Values.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      {{- if len .Values.affinity }}
      affinity:
        {{- range $key, $value := .Values.affinity }}
        {{ $key }}: {{ toYaml $value | nindent 14 }}
        {{- end }}
      {{- end }}
      {{- if len .Values.tolerations }}
      tolerations:
        {{- range .Values.tolerations }}
        - key: {{ required "Key is required for tolerations" .key | quote }}
          operator: {{ .operator | default "Equal" | quote }}
          effect: {{ .effect | default "NoSchedule" | quote }}
        {{- end }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 12 }}
      {{- if len $secrets }}
      volumes:
        {{- range $secrets }}
        - name: {{ .name }}
          secret:
            secretName: {{ $fullName }}-{{ .name }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ $fullName }}
          image: {{ required "deployment.image.tag is required" .Values.deployment.image.tag}}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 16 }}
          {{- if len .Values.deployment.args }}
          args:
            {{- range .Values.deployment.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ required "Target Port is required" .Values.service.targetPort }}
              protocol: TCP
            {{- if .Values.service.metricsPort }}
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
            {{- end }}
            {{- if .Values.service.healthCheckPort }}
            - name: health
              containerPort: {{ .Values.service.healthCheckPort }}
              protocol: TCP
            {{- end }}
          livenessProbe: {{ required "livenessProbe is required" .Values.livenessProbe | toYaml | nindent 12 }}
          readinessProbe: {{ required "readinessProbe is required" .Values.readinessProbe | toYaml | nindent 12 }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          env:
            - name: REVISION
              value: {{ required "revision is required" .Values.revision | quote }}
          {{- if len $secrets }}
          volumeMounts:
            {{- range $secrets }}
            - name: {{ .name }}
              readOnly: true
              mountPath: /app/secrets
            {{- end }}
          {{- end }}
          envFrom: {{ include "library.container.envFrom.tpl" . | nindent 12 }}
